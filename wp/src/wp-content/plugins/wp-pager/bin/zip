#! /opt/homebrew/bin/php

<?php

function getPluginVersion(): string {
    $plugin_file = file_get_contents('wp-pager.php');
    preg_match('/Version: (.*)/', $plugin_file, $matches);
    return $matches[1];
}

function getLatestPluginVersion(): string {
    $files = glob('versions/wp-pager-*.zip');

    if (empty($files)) {
        return 0;
    }

    $last_file = end($files);

    return str_replace(['versions/wp-pager-', '.zip'], '', $last_file);
}

$latest_version = getLatestPluginVersion();
$version = getPluginVersion();

if ($latest_version >= $version) {
    echo "Latest version is {$latest_version}, current version is {$version}.\n";
    echo 'Change version in wp-pager.php and try again.';
    exit;
}

// Prepare build
passthru('yarn build');
passthru('composer install --no-dev');

// Remove not necessary files
passthru('rm versions/wp-pager.zip');

// Create directory for zip
passthru('mkdir wp-pager');

$copy_dirs = [
    'assets',
    'inc',
    'storage',
    'vendor',
];

foreach ($copy_dirs as $dir) {
    passthru("cp -r {$dir} wp-pager");
}

$copy_files = [
    'index.php',
    'wp-pager.php',
];

foreach ($copy_files as $file) {
    passthru("cp {$file} wp-pager");
}

passthru('rm -r wp-pager/storage');

// Create zip file with plugin in versions directory
passthru("zip -r versions/wp-pager-{$version}.zip wp-pager");
passthru("zip -r versions/wp-pager.zip wp-pager");

// Remove build directory
passthru('rm -r wp-pager');

passthru('composer install');
